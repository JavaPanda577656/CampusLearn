-- Base table for all users (Admin, Tutor, Student)
CREATE TABLE users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    role VARCHAR(50) NOT NULL CHECK (role IN ('student', 'tutor', 'admin')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Derived table for Students (JOINED inheritance from users)
CREATE TABLE students (
    student_id BIGINT PRIMARY KEY, -- Foreign Key to users(user_id)
    student_number VARCHAR(10) UNIQUE NOT NULL,
    academic_level VARCHAR(50),
    bio VARCHAR(500),
    FOREIGN KEY (student_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Derived table for Tutors (JOINED inheritance from users)
CREATE TABLE tutors (
    tutor_id BIGINT PRIMARY KEY, -- Foreign Key to users(user_id)
    employee_code VARCHAR(100) UNIQUE,
    approved BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (tutor_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Derived table for Admin (JOINED inheritance from users)
CREATE TABLE admins (
    admin_id BIGINT PRIMARY KEY, -- Foreign Key to users(user_id)
    employee_id VARCHAR(100) UNIQUE,
    FOREIGN KEY (admin_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Main entity tables
CREATE TABLE modules (
    module_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code VARCHAR(50) UNIQUE NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT
);

CREATE TABLE topics (
    topic_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    creator_id BIGINT NOT NULL, -- User who created the topic
    module_id BIGINT NOT NULL,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    is_anonymous BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (creator_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (module_id) REFERENCES modules(module_id) ON DELETE CASCADE
);

CREATE TABLE forum_posts (
    post_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    topic_id BIGINT NOT NULL,
    author_id BIGINT NOT NULL,
    content TEXT NOT NULL,
    upvotes INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (topic_id) REFERENCES topics(topic_id) ON DELETE CASCADE,
    FOREIGN KEY (author_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE learning_materials (
    material_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    uploader_id BIGINT NOT NULL,
    topic_id BIGINT, -- Optional link to a specific topic
    module_id BIGINT NOT NULL,
    title VARCHAR(255) NOT NULL,
    type VARCHAR(50) NOT NULL, -- e.g., 'pdf', 'video', 'doc'
    file_path VARCHAR(500) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (uploader_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (topic_id) REFERENCES topics(topic_id) ON DELETE SET NULL,
    FOREIGN KEY (module_id) REFERENCES modules(module_id) ON DELETE CASCADE
);

CREATE TABLE private_messages (
    message_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    thread_id VARCHAR(255), -- Used to group messages into conversations
    sender_id BIGINT NOT NULL,
    receiver_id BIGINT NOT NULL,
    content TEXT NOT NULL,
    is_read BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (sender_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (receiver_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE notifications (
    notification_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    recipient_id BIGINT NOT NULL,
    channel VARCHAR(50) NOT NULL, -- 'email', 'sms', 'whatsapp'
    message TEXT NOT NULL,
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    delivered BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (recipient_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Junction tables for Many-to-Many relationships
CREATE TABLE topic_subscriptions (
    topic_id BIGINT NOT NULL,
    student_id BIGINT NOT NULL,
    PRIMARY KEY (topic_id, student_id),
    FOREIGN KEY (topic_id) REFERENCES topics(topic_id) ON DELETE CASCADE,
    FOREIGN KEY (student_id) REFERENCES students(student_id) ON DELETE CASCADE
);

CREATE TABLE tutor_modules (
    tutor_id BIGINT NOT NULL,
    module_id BIGINT NOT NULL,
    PRIMARY KEY (tutor_id, module_id),
    FOREIGN KEY (tutor_id) REFERENCES tutors(tutor_id) ON DELETE CASCADE,
    FOREIGN KEY (module_id) REFERENCES modules(module_id) ON DELETE CASCADE
);
